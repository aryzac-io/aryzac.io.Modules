// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 17.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Aryzac.IO.Modules.Client.Templates.Files.NuxtConfig
{
    using System.Collections.Generic;
    using System.Linq;
    using Intent.Modules.Common;
    using Intent.Modules.Common.Templates;
    using Intent.Modules.Common.TypeScript.Templates;
    using Intent.Templates;
    using Intent.Metadata.Models;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "D:\src\aryzac-io\aryzac.io.Modules\src\Aryzac.IO.Modules.Client\Templates\Files\NuxtConfig\NuxtConfigTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
    public partial class NuxtConfigTemplate : TypeScriptTemplateBase<IList<Intent.Modelers.Types.ServiceProxies.Api.ServiceProxyModel>>
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write("\r\n\r\n// https://nuxt.com/docs/api/configuration/nuxt-config\r\nexport default define" +
                    "NuxtConfig({\r\n  devtools: { enabled: true },\r\n\r\n  runtimeConfig: {\r\n    public: " +
                    "{\r\n");
            
            #line 18 "D:\src\aryzac-io\aryzac.io.Modules\src\Aryzac.IO.Modules.Client\Templates\Files\NuxtConfig\NuxtConfigTemplate.tt"
 foreach (var serviceProxy in Model) 
{ 
            
            #line default
            #line hidden
            this.Write("      ");
            
            #line 19 "D:\src\aryzac-io\aryzac.io.Modules\src\Aryzac.IO.Modules.Client\Templates\Files\NuxtConfig\NuxtConfigTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(serviceProxy.Name.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write("ApiBaseUri: \'\', // Default to an empty string, automatically set at runtime using" +
                    " process.env.NUXT_PUBLIC_");
            
            #line 19 "D:\src\aryzac-io\aryzac.io.Modules\src\Aryzac.IO.Modules.Client\Templates\Files\NuxtConfig\NuxtConfigTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(serviceProxy.Name.ToSnakeCase().ToUpper()));
            
            #line default
            #line hidden
            this.Write("_API_BASE_URI");
            
            #line 19 "D:\src\aryzac-io\aryzac.io.Modules\src\Aryzac.IO.Modules.Client\Templates\Files\NuxtConfig\NuxtConfigTemplate.tt"

}
            
            #line default
            #line hidden
            this.Write(@"
      apiBaseUri: '', // Default to an empty string, automatically set at runtime using process.env.NUXT_PUBLIC_API_BASE_URI
    }
  },

  modules: [
    // https://nuxt.com/modules/i18n
    ""@nuxtjs/i18n"",
    // https://nuxt.com/modules/tailwindcss
    ""@nuxtjs/tailwindcss"",
    // https://nuxtseo.com/nuxt-seo/getting-started/installation
    ""@nuxtseo/module"",
    // https://pinia.vuejs.org/ssr/nuxt.html
    ""@pinia/nuxt"",
    // https://nuxt.com/modules/icon
    ""nuxt-icon"",
  ],

  i18n: {
    strategy: ""prefix_except_default"",
    defaultLocale: ""en"",
    locales: [
      {
        code: ""en"",
        iso: ""en-US"", // Will be used as ""catchall"" locale by default
      },
    ],
    baseUrl: ""http://localhost:3000"",
  },

  app: {
    head: {
      titleTemplate: ""%s %separator %siteName"",
      templateParams: {
        separator: ""-"",
      },
    },
  },

  site: {
    url: ""http://localhost:3000"",
    name: """);
            
            #line 62 "D:\src\aryzac-io\aryzac.io.Modules\src\Aryzac.IO.Modules.Client\Templates\Files\NuxtConfig\NuxtConfigTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ExecutionContext.GetApplicationConfig().Name.Replace(".", " ").ToKebabCase()));
            
            #line default
            #line hidden
            this.Write("\",\r\n    description: \"Welcome\",\r\n  },\r\n\r\n  ogImage: {\r\n  },\r\n\r\n  tailwindcss: {\r\n" +
                    "    config: {\r\n      plugins: [\r\n        require(\"@tailwindcss/forms\"),\r\n       " +
                    " require(\"@tailwindcss/typography\"),\r\n      ],\r\n    },\r\n  },\r\n});\r\n");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
}
