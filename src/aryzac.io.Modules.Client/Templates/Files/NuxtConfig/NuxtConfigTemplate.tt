<#@ template language="C#" inherits="TypeScriptTemplateBase<object>" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="Intent.Modules.Common" #>
<#@ import namespace="Intent.Modules.Common.Templates" #>
<#@ import namespace="Intent.Modules.Common.TypeScript.Templates" #>
<#@ import namespace="Intent.Templates" #>
<#@ import namespace="Intent.Metadata.Models" #>
<#@ import namespace="Aryzac.IO.Modules.Client.Api" #>


// https://nuxt.com/docs/api/configuration/nuxt-config
export default defineNuxtConfig({
  devtools: { enabled: true },

  runtimeConfig: {
    public: {
<# foreach (var serviceProxy in GetServiceProxies()) 
{ #>      <#= serviceProxy.Name.ToCamelCase()#>ApiBaseUri: '', // Default to an empty string, automatically set at runtime using process.env.NUXT_PUBLIC_<#= serviceProxy.Name.ToSnakeCase().ToUpper() #>_API_BASE_URI<#
}#>

      apiBaseUri: '', // Default to an empty string, automatically set at runtime using process.env.NUXT_PUBLIC_API_BASE_URI
    }
  },

  modules: [
    // https://nuxt.com/modules/i18n
    "@nuxtjs/i18n",
    // https://nuxt.com/modules/tailwindcss
    "@nuxtjs/tailwindcss",
    // https://nuxtseo.com/nuxt-seo/getting-started/installation
    "@nuxtseo/module",
    // https://pinia.vuejs.org/ssr/nuxt.html
    "@pinia/nuxt",
    // https://nuxt.com/modules/icon
    "nuxt-icon",
  ],

<#
    var defaultLocale = "";

    foreach (var locale in GetLocales()[0].Locales)
    {
        locale.TryGetDefaultLocale(out var defaultLocaleSettings);

        if (defaultLocaleSettings is not null)
        {
            defaultLocale = locale.Name;
        }
    }
#>

  i18n: {
    strategy: "prefix_except_default",
    defaultLocale: "<#= defaultLocale #>",
    fallbackLocale: "<#= defaultLocale #>",
    locales: [
<# foreach (var locale in GetLocales()[0].Locales)
   {
      locale.TryGetLocaleSettings(out var localeSettings);
#>
      {
        code: "<#= locale.Name.ToLower() #>",
        iso: "<#= localeSettings.ISOCode() #>", 
      },
<# } #>
    ],
    baseUrl: "http://localhost:3000",
  },

  app: {
    head: {
      titleTemplate: "%s %separator %siteName",
      templateParams: {
        separator: "-",
      },
    },
  },

  site: {
    url: "http://localhost:3000",
    name: "<#= ExecutionContext.GetApplicationConfig().Name.Replace(".", " ").ToKebabCase() #>",
    description: "Welcome",
  },

  ogImage: {
  },

  tailwindcss: {
    config: {
      plugins: [
        require("@tailwindcss/forms"),
        require("@tailwindcss/typography"),
      ],
    },
  },
});
