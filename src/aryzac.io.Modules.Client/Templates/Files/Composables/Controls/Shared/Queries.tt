<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="Intent.Metadata.Models" #>
<#@ import namespace="Intent.Modelers.Types.ServiceProxies.Api" #>
<#@ import namespace="Intent.Modules.Common" #>
<#@ import namespace="Intent.Modules.Common.Templates" #>
<#@ import namespace="Intent.Modules.Common.TypeScript.Templates" #>
<#@ import namespace="Intent.Modules.Metadata.WebApi.Models" #>
<#@ import namespace="Intent.Templates" #>
<#@ import namespace="Aryzac.IO.Modules.Client.Api" #>

<# if (GetQueryModels().Any()) { #>
// Queries
<# } #>
<#
  foreach (var query in GetQueryModels())
  {
#>const { 
  data,
  pending,
  error,
  execute,
  refresh,
  status
} = await <#= query.Mapping.Element.AsOperationModel().ParentService.Name.ToPascalCase().ToCamelCase() #>Proxy.<#= query.Mapping.Element.Name.ToPascalCase().ToCamelCase() #>(<#

	foreach (var mapping in query.InternalElement.Mappings)
    {
        foreach (var mappedEnd in mapping.MappedEnds)
        {
	      #>props.<#= mappedEnd.SourceElement.Name.ToPascalCase().ToCamelCase() #><#
          if (mapping.MappedEnds.Last() != mappedEnd)
		  {
		  #>, <#
		  }
	    }
	}
	#>);
<#   
  }
#>