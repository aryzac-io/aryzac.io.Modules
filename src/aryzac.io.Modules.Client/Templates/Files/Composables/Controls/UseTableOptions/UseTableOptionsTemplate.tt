<#@ template language="C#" inherits="TypeScriptTemplateBase<Aryzac.IO.Modules.Client.Api.TableModel>" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="Intent.Metadata.Models" #>
<#@ import namespace="Intent.Modelers.Types.ServiceProxies.Api" #>
<#@ import namespace="Intent.Modules.Common" #>
<#@ import namespace="Intent.Modules.Common.Templates" #>
<#@ import namespace="Intent.Modules.Common.TypeScript.Templates" #>
<#@ import namespace="Intent.Modules.Metadata.WebApi.Models" #>
<#@ import namespace="Intent.Templates" #>
<#@ import namespace="Aryzac.IO.Modules.Client.Api" #>

import type { ComposerTranslation } from "@nuxtjs/i18n/dist/runtime/composables";
<#= DtoTypeImports #>

export const use<#= Model.InternalElement.GetFirstParentOfType(ComponentModel.SpecializationTypeId).Name.ToPascalCase()#><#= Model.Name.ToPascalCase() #>Options = (t: ComposerTranslation) => {

<#= CommandAndQueryServiceProxyComposables #>

<#= TableHeaders #>

<#= TableActions #>

}