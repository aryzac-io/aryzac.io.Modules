<#@ template language="C#" inherits="TypeScriptTemplateBase<Aryzac.IO.Modules.Client.Api.HeadingModel>" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="Intent.Modules.Common" #>
<#@ import namespace="Intent.Modules.Common.Templates" #>
<#@ import namespace="Intent.Modules.Common.TypeScript.Templates" #>
<#@ import namespace="Intent.Templates" #>
<#@ import namespace="Intent.Metadata.Models" #>
<#@ import namespace="Aryzac.IO.Modules.Client.Api" #>

<#= DtoTypeImports #>

export const use<#= Model.InternalElement.GetFirstParentOfType(ComponentModel.SpecializationTypeId).Name.ToPascalCase()#><#= Model.Name.ToPascalCase() #>Options = async (
<#= GetMethodSignature() #> 
) => {

const { t } = useI18n();

<#= CommandAndQueryServiceProxyComposables #>

<#= TitleComputed #>

<#= Attributes #>

<#= Commands #>

<#= Actions #>

return {
  title,
<# if (HasAttributes()) { #>
  attributes,
<# } #>
<# if (HasActions()) { #>
	actions,
<# } #>
<# foreach (var command in HeadingCommands()) {#>
	<#= command.Mapping.Element.Name.ToPascalCase().ToCamelCase() #>
<# } #>
};

}