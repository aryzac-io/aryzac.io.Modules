// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 17.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Aryzac.IO.Client.Nuxt.Templates.Files.Composables.Controls.UseLabelOptions
{
    using System.Collections.Generic;
    using System.Linq;
    using Intent.Modules.Common;
    using Intent.Modules.Common.Templates;
    using Intent.Modules.Common.TypeScript.Templates;
    using Intent.Templates;
    using Intent.Metadata.Models;
    using Aryzac.IO.Modules.Client.Api;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "D:\src\aryzac-io\aryzac.io.Modules\src\Aryzac.IO.Client.Nuxt\Templates\Files\Composables\Controls\UseLabelOptions\UseLabelOptionsTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
    public partial class UseLabelOptionsTemplate : TypeScriptTemplateBase<Aryzac.IO.Modules.Client.Api.LabelModel>
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write("\r\n");
            
            #line 12 "D:\src\aryzac-io\aryzac.io.Modules\src\Aryzac.IO.Client.Nuxt\Templates\Files\Composables\Controls\UseLabelOptions\UseLabelOptionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DtoTypeImports));
            
            #line default
            #line hidden
            this.Write("\r\n\r\nexport const use");
            
            #line 14 "D:\src\aryzac-io\aryzac.io.Modules\src\Aryzac.IO.Client.Nuxt\Templates\Files\Composables\Controls\UseLabelOptions\UseLabelOptionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.InternalElement.GetFirstParentOfType(ComponentModel.SpecializationTypeId).Name.ToPascalCase()));
            
            #line default
            #line hidden
            
            #line 14 "D:\src\aryzac-io\aryzac.io.Modules\src\Aryzac.IO.Client.Nuxt\Templates\Files\Composables\Controls\UseLabelOptions\UseLabelOptionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.Name.ToPascalCase()));
            
            #line default
            #line hidden
            this.Write("Options = async (\r\n");
            
            #line 15 "D:\src\aryzac-io\aryzac.io.Modules\src\Aryzac.IO.Client.Nuxt\Templates\Files\Composables\Controls\UseLabelOptions\UseLabelOptionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetMethodSignature()));
            
            #line default
            #line hidden
            this.Write(" \r\n) => {\r\n\r\nconst { t } = useI18n();\r\n\r\n");
            
            #line 20 "D:\src\aryzac-io\aryzac.io.Modules\src\Aryzac.IO.Client.Nuxt\Templates\Files\Composables\Controls\UseLabelOptions\UseLabelOptionsTemplate.tt"

  var labelField = "";
            
  var mappedColumn = Model.InternalElement.ParentElement.ParentElement.Mappings.FirstOrDefault()?.MappedEnds.FirstOrDefault(m => m.MappingTypeId == "d9cb10dc-82ed-4378-8385-e9cc8be76c40" && m.TargetElement.SpecializationType == "Label" && m.TargetElement.Id == Model.Id);

            
            #line default
            #line hidden
            this.Write("const label = computed(() => {\r\n");
            
            #line 26 "D:\src\aryzac-io\aryzac.io.Modules\src\Aryzac.IO.Client.Nuxt\Templates\Files\Composables\Controls\UseLabelOptions\UseLabelOptionsTemplate.tt"

  if (mappedColumn is not null) { 
    var mappedExpression = mappedColumn.MappingExpression;
    foreach (var source in mappedColumn.Sources)
    {
      mappedExpression = mappedExpression.Replace($"{{{source.ExpressionIdentifier}}}", $"${{{source.Element.Name.ToPascalCase().ToCamelCase()}}}");

            
            #line default
            #line hidden
            this.Write("  const ");
            
            #line 33 "D:\src\aryzac-io\aryzac.io.Modules\src\Aryzac.IO.Client.Nuxt\Templates\Files\Composables\Controls\UseLabelOptions\UseLabelOptionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(source.Element.Name.ToPascalCase().ToCamelCase()));
            
            #line default
            #line hidden
            this.Write(" = model.");
            
            #line 33 "D:\src\aryzac-io\aryzac.io.Modules\src\Aryzac.IO.Client.Nuxt\Templates\Files\Composables\Controls\UseLabelOptions\UseLabelOptionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(source.Element.Name.ToPascalCase().ToCamelCase()));
            
            #line default
            #line hidden
            this.Write(" || \'\';\r\n");
            
            #line 34 "D:\src\aryzac-io\aryzac.io.Modules\src\Aryzac.IO.Client.Nuxt\Templates\Files\Composables\Controls\UseLabelOptions\UseLabelOptionsTemplate.tt"
  } 
            
            #line default
            #line hidden
            this.Write("  const mappedExpression = `");
            
            #line 35 "D:\src\aryzac-io\aryzac.io.Modules\src\Aryzac.IO.Client.Nuxt\Templates\Files\Composables\Controls\UseLabelOptions\UseLabelOptionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(mappedExpression));
            
            #line default
            #line hidden
            this.Write("`;\r\n  return mappedExpression;\r\n");
            
            #line 37 "D:\src\aryzac-io\aryzac.io.Modules\src\Aryzac.IO.Client.Nuxt\Templates\Files\Composables\Controls\UseLabelOptions\UseLabelOptionsTemplate.tt"
 } else { 
            
            #line default
            #line hidden
            this.Write("  return \"\";\r\n");
            
            #line 39 "D:\src\aryzac-io\aryzac.io.Modules\src\Aryzac.IO.Client.Nuxt\Templates\Files\Composables\Controls\UseLabelOptions\UseLabelOptionsTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("});\r\n\r\nreturn {\r\n  label\r\n};\r\n\r\n}");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
}
